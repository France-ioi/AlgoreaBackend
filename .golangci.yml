linters-settings:
  govet:
    shadow: true
    settings:
      printf:
        funcs:
          - (github.com/github.com/sirupsen/logrus.Entry).Debugf
          - (github.com/github.com/sirupsen/logrus.Entry).Infof
          - (github.com/github.com/sirupsen/logrus.Entry).Warnf
          - (github.com/github.com/sirupsen/logrus.Entry).Errorf
          - (github.com/github.com/sirupsen/logrus.Entry).Panicf
          - (github.com/github.com/sirupsen/logrus.Entry).Fatalf
  golint:
    min-confidence: 0
  gocyclo:
    min-complexity: 10
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  depguard:
    rules:
      main:
        list-mode: original
        deny:
          # logging is allowed only by logutils.Log, logrus
          # is allowed to be used only in logutils package
          - pkg: "github.com/sirupsen/logrus"
            desc: not allowed
              - github.com/sirupsen/logrus
          - pkg: "github.com/pkg/errors"
            desc: Should be replaced by standard lib errors package
  misspell:
    locale: US
  lll:
    line-length: 140
  goimports:
    local-prefixes: github.com/France-ioi/AlgoreaBackend/v2
  gocritic:
    enabled-tags:
      - performance
      - style
      - experimental
    disabled-checks:
      - wrapperFunc
      - whyNoLint # Requires an explanation for each nolint. requires many changes
  gci:
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/France-ioi/AlgoreaBackend/v2/) # Custom section: groups all imports with the specified Prefix.
    no-inline-comments: true
    no-prefix-comments: true
    custom-order: true
    # Drops lexical ordering for custom sections.
    # Default: false
    no-lex-order: false
  errchkjson:
    check-error-free-encoding: true
    report-no-exported: true
  exhaustive:
    default-signifies-exhaustive: true
    package-scope-only: false
  nilnil:
    only-two: false
    detect-opposite: true
  paralleltest:
    ignore-missing: true
  tagliatelle:
    case:
      rules:
        json: snake
        yaml: camel
        xml: camel
        toml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
        env: upperSnake
        envconfig: upperSnake
        whatever: snake
      overrides:
        - pkg: app/payloads
          ignore: true
  varnamelen:
    ignore-names:
      - db
      - tx

linters:
  enable-all: true
  disable:
    - gochecknoglobals
    - testpackage      # Requires that go tests files are in a different package, but current tests are on private functions
    - wsl              # Requires white lines between blocks. (Very subjective, requires many changes without any real benefit. Disabled by default in golangci-lint)
    - err113           # Doesn't allow dynamic errors, requires wrapped static errors. (Disabled by default in golangci-lint)
    - contextcheck     # Checks whether a function uses a non-inherited context. (Many false positives. Disabled by default in golangci-lint)
    - forcetypeassert  # For update to go1.20
    - ireturn          # For update to go1.20
    - maintidx         # For update to go1.20
    - nlreturn         # For update to go1.20
    - nonamedreturns   # Doesn't allow named returns in functions. (Very subjective, requires many changes without any real benefit. Disabled by default in golangci-lint)
    - tenv             # Deprecated in golangci-lint v1.64.0, replaced by `usetesting`
    - wrapcheck        # Requires all errors from external packages are wrapped during return. (It requires many changes without any real benefit for now. Disabled by default in golangci-lint.)
    - exhaustruct      # Requires all structure fields to be initialized. (Requires many changes without any real benefit. Disabled by default in golangci-lint.)
    - recvcheck

issues:
  exclude-use-default: false
  exclude-dirs:
    - ^db$
    - ^app/database/testdata$
    - ^test-results$
    - ^pkg/golinters/goanalysis/(checker|passes)$
    - ^app/doc$
  exclude-rules:
    - path: _test\.go$
      linters:
        - noctx
    - path: _test\.go$
      text: "name 'tt' is too short for the scope of its usage"
      linters:
        - varnamelen
    - path: ^app/servicetest/
      linters:
        - noctx
    - text: "is too long"
      linters:
        - funlen
    - text: "has too many statements"
      linters:
        - funlen
    - text: unknown JSON option "squash" # an option provided by the mapstructure library and the formdata package
      linters:
        - staticcheck
    - text: "Duplicate words \\(.*[:,].*\\) found"
      linters:
        - dupword
  max-issues-per-linter: 0
  max-same-issues: 0
  #fix: true # Enable to try auto fix.

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.64.7 # use the fixed version to not introduce new linters unexpectedly
