version: 2
jobs:
  deps:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - restore_cache: &CACHEKEYMOD
          key: go-deps-modules-@{{ checksum "go.sum" }}
      - run: make
      - persist_to_workspace:
          root: ./
          paths:
            - "*"
      - save_cache:
          <<: *CACHEKEYMOD
          paths:
          - /go/pkg/mod
          - ~/.cache/go-build/
  tests:
    docker:
      - image: circleci/golang:1.11
      - image: circleci/mysql:5.6
        environment:
          MYSQL_USER: alg_ci_user
          MYSQL_PASSWORD: dummy_password
          MYSQL_DATABASE: ci_db
    environment:
      ALGOREA_DATABASE.CONNECTION.ADDR: 127.0.0.1
      ALGOREA_DATABASE.CONNECTION.USER: alg_ci_user
      ALGOREA_DATABASE.CONNECTION.PASSWD: dummy_password
      ALGOREA_DATABASE.CONNECTION.DBNAME: ci_db
      ALGOREA_LOGGING.FORMAT: json
      ALGOREA_LOGGING.OUTPUT: file
      ALGOREA_LOGGING.LOGSQLQUERIES: 1
      ALGOREA_LOGGING.LEVEL: debug
    steps:
      - attach_workspace:
          at: ./
      - restore_cache: *CACHEKEYMOD
      - run: sudo apt-get install mysql-client # required for db-restore
      - run:
          name: Wait for MySQL
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 30s
      - run:
          name: Seed database
          command: |
            go run main.go db-restore
            go run main.go db-migrate
      - run:
          name: Prepare for report
          command: |
            mkdir -p test-results
            go get -u github.com/jstemmer/go-junit-report
      - run:
          name: Run tests (make verbosity disabled)
          command: NOTVERBOSE=1 make test 2>&1 | go-junit-report > test-results/junit.xml
      - run:
          name: Upload test coverage results to Codecov
          command: bash <(curl -s https://codecov.io/bash)
      - store_test_results: &TESTPATH
          path: test-results
      - store_artifacts: *TESTPATH
      - store_artifacts:
          path: log
      - run:
          when: on_fail
          name: On failure, run BDD tests with details
          command: make test-bdd
  # The "lint" job is still complex as it cannot use Go modules.
  # It can be simplify to a few as soon as `gometalinter` supports Go modules
  lint:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/France-ioi/AlgoreaBackend
    environment:
      GOPATH: /go:/tmp/go
      GO111MODULE: "off"
    steps:
      # prepare
      - checkout
      - run: make print-deps > /tmp/deps.txt
      - restore_cache: &CACHEKEYNOMOD
          key: go-deps-nomod@{{ checksum "/tmp/deps.txt" }}
      - run: make deps
      # lint
      - run: make lint
      # cache of deps for the next `lint` jobs
      - run:
          name: Do not cache anything about this repo
          command: rm -rf * /go/bin/AlgoreaBackend /go/pkg/*/github.com/France-ioi/AlgoreaBackend
      - run: sudo cp -r /go /tmp/
      - save_cache:
          <<: *CACHEKEYNOMOD
          paths:
          - /tmp/go
workflows:
  version: 2
  build_test:
    jobs:
      - deps
      - tests:
          requires:
          - deps
      - lint
