// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-12-30 19:08:22.359513 +0100 CET m=+0.060674825

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "Algorea Backend API",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/items/": {
            "post": {
                "description": "Add an item within a hierarchy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add an item",
                "operationId": "add-item",
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "parameters": [
                    {
                        "description": "{}",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/items.NewItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/items.NewItemResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "items.LocalizedTitle": {
            "type": "object",
            "properties": {
                "language_id": {
                    "type": "object",
                    "$ref": "#/definitions/types.RequiredInt64"
                },
                "title": {
                    "type": "object",
                    "$ref": "#/definitions/types.RequiredString"
                }
            }
        },
        "items.NewItemRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "$ref": "#/definitions/types.OptionalInt64"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items.ParentRef"
                    }
                },
                "strings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items.LocalizedTitle"
                    }
                },
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/types.RequiredString"
                }
            }
        },
        "items.NewItemResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                }
            }
        },
        "items.ParentRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "$ref": "#/definitions/types.RequiredInt64"
                },
                "order": {
                    "type": "object",
                    "$ref": "#/definitions/types.RequiredInt64"
                }
            }
        },
        "types.OptionalInt64": {
            "type": "object",
            "properties": {
                "null": {
                    "type": "boolean"
                },
                "set": {
                    "type": "boolean"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "types.RequiredInt64": {
            "type": "object",
            "properties": {
                "null": {
                    "type": "boolean"
                },
                "set": {
                    "type": "boolean"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "types.RequiredString": {
            "type": "object",
            "properties": {
                "null": {
                    "type": "boolean"
                },
                "set": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "cookieAuth": {
            "type": "apiKey",
            "name": "PHPSESSID",
            "in": "Cookie"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
